{
  "address": "0x6f6E5ab889b72B9f769933dF3ea922d339307234",
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "funder",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "Funded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "_name",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "string",
          "name": "_uri",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "ProjectCreated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "voter",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "project",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "upVotes",
          "type": "uint256"
        }
      ],
      "name": "Voted",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_name",
          "type": "bytes32"
        },
        {
          "internalType": "string",
          "name": "_uri",
          "type": "string"
        }
      ],
      "name": "createProject",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "fund",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "fundToken",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "fundWithERC20",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getAllProjects",
      "outputs": [
        {
          "components": [
            {
              "internalType": "bytes32",
              "name": "name",
              "type": "bytes32"
            },
            {
              "internalType": "uint256",
              "name": "voteCount",
              "type": "uint256"
            },
            {
              "internalType": "string",
              "name": "uri",
              "type": "string"
            },
            {
              "internalType": "address",
              "name": "projectAddress",
              "type": "address"
            }
          ],
          "internalType": "struct Exposure.Project[]",
          "name": "",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "project_name",
          "type": "bytes32"
        }
      ],
      "name": "hasVotedProject",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "participantToNumberofProjects",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "pojectNameToIndex",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "pool",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "poolShare",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "projectNameToVoter",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "projects",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "name",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "voteCount",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "uri",
          "type": "string"
        },
        {
          "internalType": "address",
          "name": "projectAddress",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalParticipants",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "project_name",
          "type": "bytes32"
        }
      ],
      "name": "vote",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0xe457fc9302b23d36beb9bfcb53e44c0277b450c1911b0a6131c44af2fa93a254",
  "receipt": {
    "to": null,
    "from": "0x0De11B6F33b3d0813004C99b3fF7Ff73c1e1F7a3",
    "contractAddress": "0x6f6E5ab889b72B9f769933dF3ea922d339307234",
    "transactionIndex": 6,
    "gasUsed": "984733",
    "logsBloom": "0x
    "blockHash": "0xace26099845d6563e78433137627cc23f442d5e7e9bf5786f89c710557a015d7",
    "transactionHash": "0xe457fc9302b23d36beb9bfcb53e44c0277b450c1911b0a6131c44af2fa93a254",
    "logs": [
      {
        "transactionIndex": 6,
        "blockNumber": 7144945,
        "transactionHash": "0xe457fc9302b23d36beb9bfcb53e44c0277b450c1911b0a6131c44af2fa93a254",
        "address": "0x6f6E5ab889b72B9f769933dF3ea922d339307234",
        "topics": [
          "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x0000000000000000000000000de11b6f33b3d0813004c99b3ff7ff73c1e1f7a3"
        ],
        "data": "0x",
        "logIndex": 6,
        "blockHash": "0xace26099845d6563e78433137627cc23f442d5e7e9bf5786f89c710557a015d7"
      }
    ],
    "blockNumber": 7144945,
    "cumulativeGasUsed": "2080076",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 1,
  "solcInputHash": "786d19ae229d3bedf2461e560b330508",
  "metadata": "{\"compiler\":{\"version\":\"0.8.14+commit.80d49f37\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"funder\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Funded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"_name\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"string\",\"name\":\"_uri\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ProjectCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"voter\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"project\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"upVotes\",\"type\":\"uint256\"}],\"name\":\"Voted\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_name\",\"type\":\"bytes32\"},{\"internalType\":\"string\",\"name\":\"_uri\",\"type\":\"string\"}],\"name\":\"createProject\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fund\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"fundToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"fundWithERC20\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAllProjects\",\"outputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"name\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"voteCount\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"uri\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"projectAddress\",\"type\":\"address\"}],\"internalType\":\"struct Exposure.Project[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"project_name\",\"type\":\"bytes32\"}],\"name\":\"hasVotedProject\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"participantToNumberofProjects\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"pojectNameToIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pool\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"poolShare\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"projectNameToVoter\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"projects\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"name\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"voteCount\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"uri\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"projectAddress\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalParticipants\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"project_name\",\"type\":\"bytes32\"}],\"name\":\"vote\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Funding2.sol\":\"Exposure\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":100},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby removing any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0x24e0364e503a9bbde94c715d26573a76f14cd2a202d45f96f52134ab806b67b9\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"},\"contracts/Funding2.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.9;\\n\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\n\\ninterface IERC20 {\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) external returns (bool);\\n}\\n\\ncontract Exposure is Ownable {\\n    event ProjectCreated(\\n        bytes32 indexed _name,\\n        string indexed _uri,\\n        address owner\\n    );\\n\\n    event Voted(\\n        address indexed voter,\\n        bytes32 indexed project,\\n        uint256 upVotes\\n    );\\n\\n    event Funded(address indexed funder, uint256 amount);\\n\\n    struct Project {\\n        bytes32 name;\\n        uint256 voteCount;\\n        string uri;\\n        address projectAddress; // also the project's owner address\\n    }\\n\\n    Project[] public projects;\\n\\n    uint256 public pool;\\n    mapping(address => uint256) public poolShare;\\n    mapping(bytes32 => uint256) public pojectNameToIndex;\\n    mapping(bytes32 => mapping(address => bool)) public projectNameToVoter;\\n    mapping(address => uint256) public participantToNumberofProjects;\\n\\n    uint256 public totalParticipants = 0;\\n\\n    constructor() {}\\n\\n    function fund() external payable {\\n        pool += msg.value;\\n        emit Funded(msg.sender, msg.value);\\n    }\\n\\n    function fundWithERC20(address fundToken, uint256 amount) external payable {\\n        require(\\n            IERC20(fundToken).balanceOf(msg.sender) >= amount,\\n            \\\"Has not enough money\\\"\\n        );\\n        IERC20(fundToken).transferFrom(msg.sender, address(this), amount);\\n        poolShare[fundToken] += amount;\\n        emit Funded(msg.sender, amount);\\n    }\\n\\n    function createProject(bytes32 _name, string memory _uri) external {\\n        projects.push(\\n            Project({\\n                name: _name,\\n                voteCount: 0,\\n                uri: _uri,\\n                projectAddress: msg.sender\\n            })\\n        );\\n        pojectNameToIndex[_name] = projects.length - 1;\\n        if (!(participantToNumberofProjects[msg.sender] > 0))\\n            totalParticipants += 1;\\n        participantToNumberofProjects[msg.sender] += 1;\\n        emit ProjectCreated(_name, _uri, msg.sender);\\n    }\\n\\n    function vote(bytes32 project_name) external {\\n        require(!hasVotedProject(project_name), \\\"already voted this project\\\");\\n        projects[pojectNameToIndex[project_name]].voteCount += 1;\\n        projectNameToVoter[project_name][msg.sender] = true;\\n        emit Voted(\\n            msg.sender,\\n            project_name,\\n            projects[pojectNameToIndex[project_name]].voteCount\\n        );\\n    }\\n\\n    function hasVotedProject(bytes32 project_name) public view returns (bool) {\\n        if (projectNameToVoter[project_name][msg.sender]) return true;\\n        return false;\\n    }\\n\\n    function getAllProjects() public view returns (Project[] memory) {\\n        Project[] memory allProjects = new Project[](projects.length);\\n        for (uint256 i = 0; i < projects.length; i++) {\\n            allProjects[i] = projects[i];\\n        }\\n        return allProjects;\\n    }\\n}\\n\",\"keccak256\":\"0xff3f830308b8b2784acd4ac51d1ba586cca421e3f5841af6105ec8f19f7e60e7\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "",
  "deployedBytecode": "0x6080604052600436106100d35760003560e01c80638da5cb5b1161007a5780638da5cb5b1461020b57806390ae90c114610231578063a26dbf261461026c578063a69beaba14610282578063b10f4a3e146102a2578063b60d4288146102c2578063cf713eee146102ca578063f2fde38b146102f757600080fd5b8063107046bd146100d857806316f0115b146101115780631aae3b2d146101355780634a06c10614610165578063528230121461017a578063715018a6146101a757806380d03829146101bc5780638b11ec51146101de575b600080fd5b3480156100e457600080fd5b506100f86100f3366004610c36565b610317565b6040516101089493929190610cab565b60405180910390f35b34801561011d57600080fd5b5061012760025481565b604051908152602001610108565b34801561014157600080fd5b50610155610150366004610c36565b6103e8565b6040519015158152602001610108565b610178610173366004610cff565b61041a565b005b34801561018657600080fd5b50610127610195366004610d29565b60036020526000908152604090205481565b3480156101b357600080fd5b506101786105b1565b3480156101c857600080fd5b506101d16105e7565b6040516101089190610d4b565b3480156101ea57600080fd5b506101276101f9366004610c36565b60046020526000908152604090205481565b34801561021757600080fd5b506000546001600160a01b03166040516101089190610de0565b34801561023d57600080fd5b5061015561024c366004610df4565b600560209081526000928352604080842090915290825290205460ff1681565b34801561027857600080fd5b5061012760075481565b34801561028e57600080fd5b5061017861029d366004610c36565b61078a565b3480156102ae57600080fd5b506101786102bd366004610e36565b6108c1565b610178610a64565b3480156102d657600080fd5b506101276102e5366004610d29565b60066020526000908152604090205481565b34801561030357600080fd5b50610178610312366004610d29565b610ab2565b6001818154811061032757600080fd5b906000526020600020906004020160009150905080600001549080600101549080600201805461035690610ef1565b80601f016020809104026020016040519081016040528092919081815260200182805461038290610ef1565b80156103cf5780601f106103a4576101008083540402835291602001916103cf565b820191906000526020600020905b8154815290600101906020018083116103b257829003601f168201915b505050600390930154919250506001600160a01b031684565b600081815260056020908152604080832033845290915281205460ff161561041257506001919050565b506000919050565b6040516370a0823160e01b815281906001600160a01b038416906370a0823190610448903390600401610de0565b602060405180830381865afa158015610465573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104899190610f25565b10156104d35760405162461bcd60e51b8152602060048201526014602482015273486173206e6f7420656e6f756768206d6f6e657960601b60448201526064015b60405180910390fd5b6040516323b872dd60e01b8152336004820152306024820152604481018290526001600160a01b038316906323b872dd906064016020604051808303816000875af1158015610526573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061054a9190610f3e565b506001600160a01b03821660009081526003602052604081208054839290610573908490610f76565b909155505060405181815233907f5af8184bef8e4b45eb9f6ed7734d04da38ced226495548f46e0c8ff8d7d9a5249060200160405180910390a25050565b6000546001600160a01b031633146105db5760405162461bcd60e51b81526004016104ca90610f8e565b6105e56000610b4d565b565b60015460609060009067ffffffffffffffff81111561060857610608610e20565b60405190808252806020026020018201604052801561065b57816020015b604080516080810182526000808252602080830182905260609383018490529282015282526000199092019101816106265790505b50905060005b600154811015610784576001818154811061067e5761067e610fc3565b906000526020600020906004020160405180608001604052908160008201548152602001600182015481526020016002820180546106bb90610ef1565b80601f01602080910402602001604051908101604052809291908181526020018280546106e790610ef1565b80156107345780601f1061070957610100808354040283529160200191610734565b820191906000526020600020905b81548152906001019060200180831161071757829003601f168201915b5050509183525050600391909101546001600160a01b0316602090910152825183908390811061076657610766610fc3565b6020026020010181905250808061077c90610fd9565b915050610661565b50919050565b610793816103e8565b156107e05760405162461bcd60e51b815260206004820152601a60248201527f616c726561647920766f74656420746869732070726f6a65637400000000000060448201526064016104ca565b6000818152600460205260409020546001805490918291811061080557610805610fc3565b906000526020600020906004020160010160008282546108259190610f76565b9091555050600081815260056020908152604080832033808552908352818420805460ff19166001908117909155858552600490935292205481548493927ff3030daa88eabb3b7f7583ba11debc017684b88752ce6f84f24120427ac5c187929091811061089557610895610fc3565b9060005260206000209060040201600101546040516108b691815260200190565b60405180910390a350565b60408051608081018252838152600060208083018281529383018581523360608501526001805480820182559352835160049093027fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf6810193845594517fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf78601555180519394929361097a937fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf801929190910190610b9d565b5060609190910151600390910180546001600160a01b0319166001600160a01b03909216919091179055600180546109b29190610ff2565b6000838152600460209081526040808320939093553382526006905220546109ed576001600760008282546109e79190610f76565b90915550505b336000908152600660205260408120805460019290610a0d908490610f76565b9091555050604051610a20908290611009565b6040518091039020827f3c107688bb3706436ee76774cd4b1aa40d4cd633a9e79567ceaa9b57b7682e6f33604051610a589190610de0565b60405180910390a35050565b3460026000828254610a769190610f76565b909155505060405134815233907f5af8184bef8e4b45eb9f6ed7734d04da38ced226495548f46e0c8ff8d7d9a5249060200160405180910390a2565b6000546001600160a01b03163314610adc5760405162461bcd60e51b81526004016104ca90610f8e565b6001600160a01b038116610b415760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016104ca565b610b4a81610b4d565b50565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b828054610ba990610ef1565b90600052602060002090601f016020900481019282610bcb5760008555610c11565b82601f10610be457805160ff1916838001178555610c11565b82800160010185558215610c11579182015b82811115610c11578251825591602001919060010190610bf6565b50610c1d929150610c21565b5090565b5b80821115610c1d5760008155600101610c22565b600060208284031215610c4857600080fd5b5035919050565b60005b83811015610c6a578181015183820152602001610c52565b83811115610c79576000848401525b50505050565b60008151808452610c97816020860160208601610c4f565b601f01601f19169290920160200192915050565b848152836020820152608060408201526000610cca6080830185610c7f565b905060018060a01b038316606083015295945050505050565b80356001600160a01b0381168114610cfa57600080fd5b919050565b60008060408385031215610d1257600080fd5b610d1b83610ce3565b946020939093013593505050565b600060208284031215610d3b57600080fd5b610d4482610ce3565b9392505050565b60006020808301818452808551808352604092508286019150828160051b87010184880160005b83811015610dd257603f1989840301855281516080815185528882015189860152878201518189870152610da882870182610c7f565b6060938401516001600160a01b031696909301959095525094870194925090860190600101610d72565b509098975050505050505050565b6001600160a01b0391909116815260200190565b60008060408385031215610e0757600080fd5b82359150610e1760208401610ce3565b90509250929050565b634e487b7160e01b600052604160045260246000fd5b60008060408385031215610e4957600080fd5b82359150602083013567ffffffffffffffff80821115610e6857600080fd5b818501915085601f830112610e7c57600080fd5b813581811115610e8e57610e8e610e20565b604051601f8201601f19908116603f01168101908382118183101715610eb657610eb6610e20565b81604052828152886020848701011115610ecf57600080fd5b8260208601602083013760006020848301015280955050505050509250929050565b600181811c90821680610f0557607f821691505b60208210810361078457634e487b7160e01b600052602260045260246000fd5b600060208284031215610f3757600080fd5b5051919050565b600060208284031215610f5057600080fd5b81518015158114610d4457600080fd5b634e487b7160e01b600052601160045260246000fd5b60008219821115610f8957610f89610f60565b500190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b634e487b7160e01b600052603260045260246000fd5b600060018201610feb57610feb610f60565b5060010190565b60008282101561100457611004610f60565b500390565b6000825161101b818460208701610c4f565b919091019291505056fea2646970667358221220c61224ab076de334b9ae5c3ee6a46dca3494f6fa2053bd630a40adcd4a255ef764736f6c634300080e0033",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 400,
        "contract": "contracts/Funding2.sol:Exposure",
        "label": "_owner",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 10054,
        "contract": "contracts/Funding2.sol:Exposure",
        "label": "projects",
        "offset": 0,
        "slot": "1",
        "type": "t_array(t_struct(Project)10050_storage)dyn_storage"
      },
      {
        "astId": 10056,
        "contract": "contracts/Funding2.sol:Exposure",
        "label": "pool",
        "offset": 0,
        "slot": "2",
        "type": "t_uint256"
      },
      {
        "astId": 10060,
        "contract": "contracts/Funding2.sol:Exposure",
        "label": "poolShare",
        "offset": 0,
        "slot": "3",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 10064,
        "contract": "contracts/Funding2.sol:Exposure",
        "label": "pojectNameToIndex",
        "offset": 0,
        "slot": "4",
        "type": "t_mapping(t_bytes32,t_uint256)"
      },
      {
        "astId": 10070,
        "contract": "contracts/Funding2.sol:Exposure",
        "label": "projectNameToVoter",
        "offset": 0,
        "slot": "5",
        "type": "t_mapping(t_bytes32,t_mapping(t_address,t_bool))"
      },
      {
        "astId": 10074,
        "contract": "contracts/Funding2.sol:Exposure",
        "label": "participantToNumberofProjects",
        "offset": 0,
        "slot": "6",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 10077,
        "contract": "contracts/Funding2.sol:Exposure",
        "label": "totalParticipants",
        "offset": 0,
        "slot": "7",
        "type": "t_uint256"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_struct(Project)10050_storage)dyn_storage": {
        "base": "t_struct(Project)10050_storage",
        "encoding": "dynamic_array",
        "label": "struct Exposure.Project[]",
        "numberOfBytes": "32"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_bytes32": {
        "encoding": "inplace",
        "label": "bytes32",
        "numberOfBytes": "32"
      },
      "t_mapping(t_address,t_bool)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => bool)",
        "numberOfBytes": "32",
        "value": "t_bool"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_mapping(t_bytes32,t_mapping(t_address,t_bool))": {
        "encoding": "mapping",
        "key": "t_bytes32",
        "label": "mapping(bytes32 => mapping(address => bool))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_address,t_bool)"
      },
      "t_mapping(t_bytes32,t_uint256)": {
        "encoding": "mapping",
        "key": "t_bytes32",
        "label": "mapping(bytes32 => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_struct(Project)10050_storage": {
        "encoding": "inplace",
        "label": "struct Exposure.Project",
        "members": [
          {
            "astId": 10043,
            "contract": "contracts/Funding2.sol:Exposure",
            "label": "name",
            "offset": 0,
            "slot": "0",
            "type": "t_bytes32"
          },
          {
            "astId": 10045,
            "contract": "contracts/Funding2.sol:Exposure",
            "label": "voteCount",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256"
          },
          {
            "astId": 10047,
            "contract": "contracts/Funding2.sol:Exposure",
            "label": "uri",
            "offset": 0,
            "slot": "2",
            "type": "t_string_storage"
          },
          {
            "astId": 10049,
            "contract": "contracts/Funding2.sol:Exposure",
            "label": "projectAddress",
            "offset": 0,
            "slot": "3",
            "type": "t_address"
          }
        ],
        "numberOfBytes": "128"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}